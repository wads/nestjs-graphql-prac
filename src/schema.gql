# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdminUser {
  id: Int!
  email: String!
  userName: String!
  isActive: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AdminUserList {
  offset: Int!
  limit: Int!
  total: Int!
  items: [AdminUser!]!
}

type Item {
  id: ID!
  makerId: ID!
  maker: Maker!
  slug: String!
  name: String!
  description: String!
  price: Int!
  targetGender: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

type Maker {
  id: ID!
  slug: String!
  name: String!
  items: [Item!]!
  createdAt: DateTime
  updatedAt: DateTime
}

type MakerList {
  offset: Int!
  limit: Int!
  total: Int!
  items: [Maker!]!
}

type ItemList {
  offset: Int!
  limit: Int!
  total: Int!
  items: [Item!]!
}

type Category {
  id: Int!
  slug: String!
  name: String!
}

type CategoryList {
  offset: Int!
  limit: Int!
  total: Int!
  items: [Category!]!
}

type TargetAge {
  id: Int!
  slug: String!
  name: String!
  items: [Item!]!
}

type Query {
  adminUsers(query: OffsetLimitPaginationInput): AdminUserList!
  adminUser(id: Int!): AdminUser!
  makers(query: OffsetLimitPaginationInput): MakerList!
  maker(id: ID!): Maker!
  items(query: OffsetLimitPaginationInput): ItemList!
  item(id: ID!): Item!
  categories(query: OffsetLimitPaginationInput): CategoryList!
  category(id: Int!): Category!
}

input OffsetLimitPaginationInput {
  offset: Int = 0
  limit: Int = 30
}

type Mutation {
  createAdminUser(createAdminUserInput: CreateAdminUserInput!): AdminUser!
  updateAdminUser(updateAdminUserInput: UpdateAdminUserInput!): AdminUser!
  removeAdminUser(id: Int!): AdminUser
  login(loginUserInput: LoginUserInput!): AdminUser!
  logout: Boolean
  createMaker(createMakerInput: CreateMakerInput!): Maker!
  updateMaker(updateMakerInput: UpdateMakerInput!): Maker!
  removeMaker(id: ID!): Maker
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  removeItem(id: ID!): Item
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category
}

input CreateAdminUserInput {
  email: String!
  password: String!
  userName: String!
  isActive: Boolean
}

input UpdateAdminUserInput {
  id: Int!
  isActive: Boolean
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateMakerInput {
  slug: String!
  name: String!
}

input UpdateMakerInput {
  slug: String
  name: String
  id: ID!
}

input CreateItemInput {
  makerId: ID!
  targetAgeId: Int!
  slug: String!
  name: String!
  description: String!
  price: Int
  targetGender: Int!
}

input UpdateItemInput {
  makerId: ID
  targetAgeId: Int
  slug: String
  name: String
  description: String
  price: Int
  targetGender: Int
  id: ID!
}

input CreateCategoryInput {
  id: Int!
  slug: String!
  name: String!
  parentCategoryId: Int
}

input UpdateCategoryInput {
  id: Int!
  slug: String
  name: String
}